package task7;

import java.util.ArrayList;
import java.util.List;
import java.util.Comparator;
import java.util.Collections;
import java.util.Scanner;

//üí°üí°- –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å "User", —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:
//
//private String name;
//
//private Integer age;
//
//üí°- –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–ª–∞—Å—Å –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã, –ø—Ä–∏—Å–≤–∞–∏–≤–∞—é—â–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
//
//üí°- –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–ª–∞—Å—Å –º–µ—Ç–æ–¥: public String toString(), –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞: "–í–∞—Å—è, –≤–æ–∑—Ä–∞—Å—Ç 25 –ª–µ—Ç", –≥–¥–µ "–í–∞—Å—è" -
// –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π name, –∞ 25 - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π age.
//
//üí°- –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –Ω–∞ –≤—Ö–æ–¥ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –∏–º–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
// –≤ –º–µ—Ç–æ–¥–µ main –≥–ª–∞–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞:
//
//üí°- –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ ArrayList<User>();
//
//üí°- –¶–∏–∫–ª–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ 5-—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–ø–∏—Å–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –≤–≤–æ–¥–µ, –≤ ArrayList<>
//
//üí°- –í—ã–≤–µ—Å—Ç–∏ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ toString()), –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –≤–æ–∑—Ä–∞—Å—Ç–∞ (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å,
// –∏—Å–ø–æ–ª—å–∑—É—è Collections.sort(), —Ä–µ–∞–ª–∏–∑–æ–≤–∞–≤ –≤ –Ω–µ–º Comparator, —Å—Ä–∞–≤–Ω–∏–≤–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö age)


public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String name;
        int age; // why not to be primitive?

        List<User> userArrayList = new ArrayList<User>(5);

        for (int i = 1; i <= 5; i++) {
            System.out.printf("Enter %d class name:\n> ", i);
            name = in.nextLine();
            System.out.printf("Enter %d class age:\n> ", i);
            age = in.nextInt();
            in.nextLine(); // remove \n after age

            userArrayList.add(new User(name, age));
        }

        // we can use userArrayList.sort here
        Collections.sort(userArrayList, new Comparator<User>() {
            @Override
            public int compare(User lhs, User rhs) {
                int age1 = lhs.GetAge();
                int age2 = rhs.GetAge();

                if (age1 > age2 ) {
                    return 1;
                }
                else if (age1 < age2) {
                    return -1;
                }
                else {
                    return 0;
                }
            }
        });

        for (User userClass : userArrayList) {
            System.out.println(userClass);
        }
        //OUTPUT:
        //User Ss, age: 1
        //User Dmitry, age: 10
        //User Shun, age: 12
        //User Alexander, age: 51
        //User hello, age: 76
    }
}

class User {
    private String name;
    private Integer age;

    User() {
        this.name = "N/A";
        this.age = 0;
    }

    User(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public void SetName(String name) {
        this.name = name;
    }

    public String GetName() {
        return this.name;
    }

    public void SetAge(Integer age) {
        this.age = age;
    }

    public Integer GetAge() {
        return this.age;
    }

    public String toString() {
        return "User " + this.name + ", age: " + this.age;
    }
}